generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id         String   @id @default(cuid())
  user_id    String
  game_id    String
  comment    String
  created_at DateTime @default(now())
  game       Game     @relation(fields: [game_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])

  @@map("comments")
}

model Rating {
  id        String   @id @default(cuid())
  rating    Int
  userId    String
  gameId    String
  createdAt DateTime @default(now())
  Game      Game     @relation(fields: [gameId], references: [id])

  @@map("ratings")
}

model Game {
  id                  String    @id @default(cuid())
  name                String
  price               Float
  discount_percentage Int
  cover_img_url       String
  description         String
  banner_img          String
  category            String
  slug                String
  Comment             Comment[]
  ratings             Rating[]

  @@map("games")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  comments      Comment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
